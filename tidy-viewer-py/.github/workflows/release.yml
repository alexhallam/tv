name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install maturin
      run: |
        python -m pip install --upgrade pip
        pip install maturin[patchelf]
    
    - name: Build wheel
      run: |
        maturin build --release --strip --interpreter python${{ matrix.python-version }}
    
    - name: Upload wheel
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: target/wheels/*.whl

  build-sdist:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install maturin
      run: |
        python -m pip install --upgrade pip
        pip install maturin[patchelf]
    
    - name: Build source distribution
      run: |
        maturin sdist
    
    - name: Upload sdist
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: target/wheels/*.tar.gz

  publish:
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/tidy-viewer-py
    permissions:
      id-token: write
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        name: wheels
        path: dist
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1



