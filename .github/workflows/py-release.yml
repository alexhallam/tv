name: Python Release

on:
  push:
    tags:
      - 'py-v*'
  workflow_dispatch:

concurrency:
  group: pypi-publish-${{ github.ref }}
  cancel-in-progress: false

env:
  CARGO_TERM_COLOR: always

jobs:
  build-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install maturin
        run: |
          python -m pip install --upgrade pip
          pip install maturin${{ runner.os == 'Linux' && '[patchelf]' || '' }}

      - name: Build wheel
        working-directory: tidy-viewer-py
        run: |
          maturin build --release --strip

      - name: List wheel artifacts (Unix)
        if: runner.os != 'Windows'
        run: |
          ls -l target/wheels/ || true

      - name: List wheel artifacts (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          if (Test-Path 'target/wheels') { Get-ChildItem -Force 'target/wheels' | Format-List } else { Write-Host 'No wheels directory yet' }

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
          path: target/wheels/*.whl
          if-no-files-found: error

  build-sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install maturin
        run: |
          python -m pip install --upgrade pip
          pip install maturin[patchelf]

      - name: Build source distribution
        working-directory: tidy-viewer-py
        run: |
          maturin sdist

      - name: List sdist artifacts
        run: |
          ls -l target/wheels/ || true

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: target/wheels/*.tar.gz
          if-no-files-found: error

  publish:
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/tidy-viewer-py
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download wheel artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
          path: dist

      - name: Download sdist artifact
        uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist

      - name: List dist contents
        run: |
          ls -l dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist