name: Build and Publish

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install maturin
      run: pip install maturin[patchelf]
    
    - name: Build and test
      run: |
        cd py-tidy-viewer
        maturin develop
        python -m pytest tests/ -v

  build:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install maturin
      run: pip install maturin[patchelf]
    
    - name: Build wheels
      run: |
        cd py-tidy-viewer
        maturin build --release --strip --interpreter python${{ matrix.python-version }}
    
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels-${{ matrix.os }}-${{ matrix.python-version }}
        path: py-tidy-viewer/target/wheels/*.whl

  build-sdist:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install maturin
      run: pip install maturin[patchelf]
    
    - name: Build source distribution
      run: |
        cd py-tidy-viewer
        maturin sdist
    
    - name: Upload sdist
      uses: actions/upload-artifact@v3
      with:
        name: sdist
        path: py-tidy-viewer/target/wheels/*.tar.gz

  publish:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build, build-sdist]
    runs-on: ubuntu-latest
    environment: release
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: dist
    
    - name: Flatten artifacts
      run: |
        mkdir -p final_dist
        find dist -name "*.whl" -exec cp {} final_dist/ \;
        find dist -name "*.tar.gz" -exec cp {} final_dist/ \;
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages_dir: final_dist/